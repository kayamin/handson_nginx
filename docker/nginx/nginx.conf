# 最小限のnginx 設定

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log debug; # 末尾で書き出すログのログレベルを指定する info, warn, error 等
pid        /var/run/nginx.pid; # pid を記述したファイルの配置先 kill 等で直接シグナルを送りたい場合に参照する


# イベントループに関する設定を行うコンテキスト
events {
  worker_connections  1024; # 1つのワーカープロセスが同時に受けられる接続数 client -> nginx -> backend で２つ使う
}


# http ディレクティブの コンテキスト, mainコンテキスト直下にのみ定義可能
http {

  include       /etc/nginx/mime.types; # types ディレクティブで 扱う Content-Type の一覧を設定する
  default_type  application/octet-stream; # 上記 include に失敗した場合には? default_type の値が適用される

  # ログファイルのフォーマットを定義する
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  # 定義済みのログフォーマットを用いてログを出力する先を設定する
  access_log  /var/log/nginx/access.log  main;


  # docker-compose で立ち上げる springboot コンテナへのリバースプロキシを設定
  server {
    listen 80;
    charset utf-8;

    location / {

      # proxy_pass の書き方によって動作が変わる
      # パス名を省略(ip:port まで）した場合: クラントから受信したパス名がそのままバックエンドに送られる
      # パス名を含めた場合：前方一致の location 指定でのみ使える，クライアントから受信したパス名からlocation でマッチした部分を取り除いたパス名 + 指定したパス名 をバックエンドに送る
      # -> url の前方部分を書き換えるだけで良ければ proxy_pass でOK フォワーディングが実現できる
      proxy_pass http://springboot:8080;

      # proxy_set_header ディレクティブ バックエンドにアクセスしてきたクライアントの情報を渡すために，ヘッダに情報付与する
      proxy_set_header Host $host:$server_port; # HOST ヘッダに 受信したHostヘッダ(nginxのホスト名）と ポートを設定する
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # クライアントのIPアドレスを設定，複数のリバースプロキシを経由する場合はここに , 区切りで先頭に IP を追加していく
      proxy_set_header X-Forwarded-Host $server_name; # リクエストを受け付けた server の server_name ディレクティブ値 を設定する ー＞　バーチャルホストの使い分けに使う？？
      proxy_set_header X-Real-IP $remote_addr; # クライアントのIPアドレス (直前のもののみ）

      add_header H-test dummy; # ヘッダーをレスポンスに追加する，エラーレスポンスの場合は付与されないので注意
    }

    # proxy_pass のパス名を含めた場合
    location /path {
      # /path/hello -> /hello
      proxy_pass http://springboot:8080/;
    }

    # リライト処理

    rewrite_log on; # リライト処理のログを error_log に書き出す

    # 正規表現による書き換えを用いた proxy_pass
    # http://localhost:80/forward_proxy1/hello -> http://springboot:8080/hello
    location /foward_proxy1 {
      rewrite     /foward_proxy1/(.*) /$1 break;
      proxy_pass  http://springboot:8080;
    }

    # 正規表現による書き換えを用いた proxy_pass
    # http://localhost:80/foward_proxy2/2/addtwo -> http://springboot:8080/addtwo/2
    location /foward_proxy2 {
      rewrite     /foward_proxy2/(\d+)/(.*) /$2/$1 break;
      proxy_pass  http://springboot:8080;
    }
  }
}